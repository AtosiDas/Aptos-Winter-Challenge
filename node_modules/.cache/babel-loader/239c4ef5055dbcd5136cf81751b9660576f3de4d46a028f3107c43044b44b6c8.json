{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATOSI\\\\Desktop\\\\Aptos\\\\first-dapp\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { AptosClient } from 'aptos';\n\n// Create an AptosClient to interact with devnet.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\nfunction App() {\n  _s();\n  // Retrieve aptos.account on initial render and store it.\n  const [address, setAddress] = React.useState(null);\n  const [account, setAccount] = React.useState(null);\n  // Check for the module; show publish instructions if not present.\n  const [modules, setModules] = React.useState([]);\n  /**\n   * init function\n   */\n  const LogIn = async () => {\n    // connect\n    const {\n      address,\n      publicKey\n    } = await window.aptos.connect();\n    setAddress(address);\n  };\n\n  // React.useEffect(() => {\n  //    init();\n  // }, []);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccount(address).then(setAccount);\n  }, [address]);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccountModules(address).then(setModules);\n  }, [address]);\n\n  // function LogIn() {\n  //   const { address, publicKey } = await window.aptos.connect();\n  //   setAddress(address);\n  // }\n  const hasModule = modules.some(m => {\n    var _m$abi;\n    return ((_m$abi = m.abi) === null || _m$abi === void 0 ? void 0 : _m$abi.name) === 'message';\n  });\n  const publishInstructions = /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: [\"Run this command to publish the module:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"aptos move publish --package-dir /path/to/hello_blockchain/ --named-addresses hello_blockchain=\", address]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Address: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: LogIn,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Count: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: account === null || account === void 0 ? void 0 : account.sequence_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), !hasModule && publishInstructions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xmYC2OAeiSSZrwzaKHjO7240IiY=\");\n_c = App;\nexport default App;\n\n// import React from 'react';\n// import './App.css';\n// import { Types, AptosClient } from 'aptos';\n\n// const client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\n// function App() {\n//   const [address, setAddress] = React.useState<string | null>(null);\n//   const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n//   const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n//   const [totalCount,setTotalCount] = React.useState(0)\n//   const [IsLogIn, setIsLogIn] = React.useState(false);\n//   const LogIn = async() =>{\n//     const { address, publicKey } = await window.aptos.connect();\n//     setAddress(address);\n//     setIsLogIn(true);\n//     //setTotalCount(totalCount +1)\n//   }\n//   function increase(){\n//     {IsLogIn && setTotalCount(totalCount +1)}\n//   }\n\n//   return (<div className='App'>\n//     <h1>Hello Aptos Users</h1>\n//     <div>\n//     <button className='login' onClick={LogIn} >LogIn</button></div>\n//     <button className='click' onClick={increase}>Click here</button>\n//     <p>Total Count: {totalCount}</p>\n//   </div>);\n// }\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AptosClient","jsxDEV","_jsxDEV","client","App","_s","address","setAddress","useState","account","setAccount","modules","setModules","LogIn","publicKey","window","aptos","connect","useEffect","getAccount","then","getAccountModules","hasModule","some","m","_m$abi","abi","name","publishInstructions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","sequence_number","_c","$RefreshReg$"],"sources":["C:/Users/ATOSI/Desktop/Aptos/first-dapp/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Types, AptosClient } from 'aptos';\n\n// Create an AptosClient to interact with devnet.\nconst client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\nfunction App() {\n  // Retrieve aptos.account on initial render and store it.\n  const [address, setAddress] = React.useState<string | null>(null);\n  const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n  // Check for the module; show publish instructions if not present.\n  const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n  /**\n   * init function\n   */\n  const LogIn = async() => {\n    // connect\n    const { address, publicKey } = await window.aptos.connect();\n    setAddress(address);\n  }\n  \n  // React.useEffect(() => {\n  //    init();\n  // }, []);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccount(address).then(setAccount);\n  }, [address]);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccountModules(address).then(setModules);\n  }, [address]);\n\n  // function LogIn() {\n  //   const { address, publicKey } = await window.aptos.connect();\n  //   setAddress(address);\n  // }\n  const hasModule = modules.some((m) => m.abi?.name === 'message');\n  const publishInstructions = (\n    <pre>\n      Run this command to publish the module:\n      <br />\n      aptos move publish --package-dir /path/to/hello_blockchain/\n      --named-addresses hello_blockchain={address}\n    </pre>\n  );\n  return (\n    <div className=\"App\">\n      <p>Account Address: <code>{ address }</code></p>\n      <button onClick={LogIn} >Log In</button>\n      <p>Total Count: <code>{ account?.sequence_number }</code></p>\n      {!hasModule && publishInstructions}\n    </div>\n  );\n}\n\nexport default App;\n\n// import React from 'react';\n// import './App.css';\n// import { Types, AptosClient } from 'aptos';\n\n// const client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\n// function App() {\n//   const [address, setAddress] = React.useState<string | null>(null);\n//   const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n//   const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n//   const [totalCount,setTotalCount] = React.useState(0)\n//   const [IsLogIn, setIsLogIn] = React.useState(false);\n//   const LogIn = async() =>{\n//     const { address, publicKey } = await window.aptos.connect();\n//     setAddress(address);\n//     setIsLogIn(true);\n//     //setTotalCount(totalCount +1)\n//   }\n//   function increase(){\n//     {IsLogIn && setTotalCount(totalCount +1)}\n//   }\n\n//   return (<div className='App'>\n//     <h1>Hello Aptos Users</h1>\n//     <div>\n//     <button className='login' onClick={LogIn} >LogIn</button></div>\n//     <button className='click' onClick={increase}>Click here</button>\n//     <p>Total Count: {totalCount}</p>\n//   </div>);\n// }\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}