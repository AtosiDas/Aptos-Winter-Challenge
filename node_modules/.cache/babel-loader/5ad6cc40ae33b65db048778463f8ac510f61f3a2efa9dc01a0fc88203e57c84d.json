{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATOSI\\\\Desktop\\\\Aptos\\\\first-dapp\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './App.css';\n// import { Types, AptosClient } from 'aptos';\n\n// // Create an AptosClient to interact with devnet.\n// const client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\n// function App() {\n//   // Retrieve aptos.account on initial render and store it.\n//   const [address, setAddress] = React.useState<string | null>(null);\n//   const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n//   // Check for the module; show publish instructions if not present.\n//   const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n//   /**\n//    * init function\n//    */\n//   const LogIn = async() => {\n//     // connect\n//     const { address, publicKey } = await window.aptos.connect();\n//     setAddress(address);\n//   }\n\n//   // React.useEffect(() => {\n//   //    init();\n//   // }, []);\n//   React.useEffect(() => {\n//     if (!address) return;\n//     client.getAccount(address).then(setAccount);\n//   }, [address]);\n//   React.useEffect(() => {\n//     if (!address) return;\n//     client.getAccountModules(address).then(setModules);\n//   }, [address]);\n\n//   // function LogIn() {\n//   //   const { address, publicKey } = await window.aptos.connect();\n//   //   setAddress(address);\n//   // }\n//   const hasModule = modules.some((m) => m.abi?.name === 'message');\n//   const publishInstructions = (\n//     <pre>\n//       Run this command to publish the module:\n//       <br />\n//       aptos move publish --package-dir /path/to/hello_blockchain/\n//       --named-addresses hello_blockchain={address}\n//     </pre>\n//   );\n//   return (\n//     <div className=\"App\">\n//       <p>Account Address: <code>{ address }</code></p>\n//       <button onClick={LogIn} >Log In</button>\n//       <p>Total Count: <code>{ account?.sequence_number }</code></p>\n//       {!hasModule && publishInstructions}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//const client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\nfunction App() {\n  _s();\n  const [address, setAddress] = React.useState(null);\n  const [account, setAccount] = React.useState(null);\n  const [modules, setModules] = React.useState([]);\n  function LogIn() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: LogIn,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 11\n  }, this);\n}\n_s(App, \"pSHdaH3BMuF5qlgm4PNkN7D0l/k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","address","setAddress","useState","account","setAccount","modules","setModules","LogIn","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ATOSI/Desktop/Aptos/first-dapp/src/App.tsx"],"sourcesContent":["// import React from 'react';\n// import './App.css';\n// import { Types, AptosClient } from 'aptos';\n\n// // Create an AptosClient to interact with devnet.\n// const client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\n// function App() {\n//   // Retrieve aptos.account on initial render and store it.\n//   const [address, setAddress] = React.useState<string | null>(null);\n//   const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n//   // Check for the module; show publish instructions if not present.\n//   const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n//   /**\n//    * init function\n//    */\n//   const LogIn = async() => {\n//     // connect\n//     const { address, publicKey } = await window.aptos.connect();\n//     setAddress(address);\n//   }\n  \n//   // React.useEffect(() => {\n//   //    init();\n//   // }, []);\n//   React.useEffect(() => {\n//     if (!address) return;\n//     client.getAccount(address).then(setAccount);\n//   }, [address]);\n//   React.useEffect(() => {\n//     if (!address) return;\n//     client.getAccountModules(address).then(setModules);\n//   }, [address]);\n\n//   // function LogIn() {\n//   //   const { address, publicKey } = await window.aptos.connect();\n//   //   setAddress(address);\n//   // }\n//   const hasModule = modules.some((m) => m.abi?.name === 'message');\n//   const publishInstructions = (\n//     <pre>\n//       Run this command to publish the module:\n//       <br />\n//       aptos move publish --package-dir /path/to/hello_blockchain/\n//       --named-addresses hello_blockchain={address}\n//     </pre>\n//   );\n//   return (\n//     <div className=\"App\">\n//       <p>Account Address: <code>{ address }</code></p>\n//       <button onClick={LogIn} >Log In</button>\n//       <p>Total Count: <code>{ account?.sequence_number }</code></p>\n//       {!hasModule && publishInstructions}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport './App.css';\nimport { Types, AptosClient } from 'aptos';\n\n//const client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\nfunction App() {\n  const [address, setAddress] = React.useState<string | null>(null);\n  const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n  const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n  function LogIn(){\n    \n  }\n\n  return (<div className='App'>\n    <button onClick={LogIn} >Log In</button>\n  </div>);\n}\nexport default App;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAgB,IAAI,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAA2B,IAAI,CAAC;EAC5E,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACO,QAAQ,CAA6B,EAAE,CAAC;EAC5E,SAASK,KAAKA,CAAA,EAAE,CAEhB;EAEA,oBAAQV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAC1BZ,OAAA;MAAQa,OAAO,EAAEH,KAAM;MAAAE,QAAA,EAAE;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AACR;AAACf,EAAA,CAXQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}