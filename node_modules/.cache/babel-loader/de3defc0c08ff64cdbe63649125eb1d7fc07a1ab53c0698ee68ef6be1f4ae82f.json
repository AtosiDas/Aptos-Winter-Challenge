{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATOSI\\\\Downloads\\\\aptos-cli-2.3.1-Windows-x86_64\\\\first-dapp\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { AptosClient } from 'aptos';\n\n// Create an AptosClient to interact with devnet.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\nfunction App() {\n  _s();\n  // Retrieve aptos.account on initial render and store it.\n  const [address, setAddress] = React.useState(null);\n  const [account, setAccount] = React.useState(null);\n  // Check for the module; show publish instructions if not present.\n  const [modules, setModules] = React.useState([]);\n  /**\n   * init function\n   */\n  const init = async () => {\n    // connect\n    const {\n      address,\n      publicKey\n    } = await window.aptos.connect();\n    setAddress(address);\n  };\n  React.useEffect(() => {\n    init();\n  }, []);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccount(address).then(setAccount);\n  }, [address]);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccountModules(address).then(setModules);\n  }, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Address: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sequence Number: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: account === null || account === void 0 ? void 0 : account.sequence_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y/1KGsmHc5oUwZGNKmDIdZV2l7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AptosClient","jsxDEV","_jsxDEV","client","App","_s","address","setAddress","useState","account","setAccount","modules","setModules","init","publicKey","window","aptos","connect","useEffect","getAccount","then","getAccountModules","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sequence_number","_c","$RefreshReg$"],"sources":["C:/Users/ATOSI/Downloads/aptos-cli-2.3.1-Windows-x86_64/first-dapp/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Types, AptosClient } from 'aptos';\n\n// Create an AptosClient to interact with devnet.\nconst client = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\nfunction App() {\n  // Retrieve aptos.account on initial render and store it.\n  const [address, setAddress] = React.useState<string | null>(null);\n  const [account, setAccount] = React.useState<Types.AccountData | null>(null);\n  // Check for the module; show publish instructions if not present.\n  const [modules, setModules] = React.useState<Types.MoveModuleBytecode[]>([]);\n  /**\n   * init function\n   */\n  const init = async() => {\n    // connect\n    const { address, publicKey } = await window.aptos.connect();\n    setAddress(address);\n  }\n  \n  React.useEffect(() => {\n     init();\n  }, []);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccount(address).then(setAccount);\n  }, [address]);\n  React.useEffect(() => {\n    if (!address) return;\n    client.getAccountModules(address).then(setModules);\n  }, [address]);\n\n  return (\n    <div className=\"App\">\n      <p>Account Address: <code>{ address }</code></p>\n      <p>Sequence Number: <code>{ account?.sequence_number }</code></p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAAgBC,WAAW,QAAQ,OAAO;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,IAAIH,WAAW,CAAC,0CAA0C,CAAC;AAC1E,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAgB,IAAI,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAA2B,IAAI,CAAC;EAC5E;EACA,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGb,KAAK,CAACS,QAAQ,CAA6B,EAAE,CAAC;EAC5E;AACF;AACA;EACE,MAAMK,IAAI,GAAG,MAAAA,CAAA,KAAW;IACtB;IACA,MAAM;MAAEP,OAAO;MAAEQ;IAAU,CAAC,GAAG,MAAMC,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,CAAC;IAC3DV,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAEDP,KAAK,CAACmB,SAAS,CAAC,MAAM;IACnBL,IAAI,CAAC,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EACNd,KAAK,CAACmB,SAAS,CAAC,MAAM;IACpB,IAAI,CAACZ,OAAO,EAAE;IACdH,MAAM,CAACgB,UAAU,CAACb,OAAO,CAAC,CAACc,IAAI,CAACV,UAAU,CAAC;EAC7C,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EACbP,KAAK,CAACmB,SAAS,CAAC,MAAM;IACpB,IAAI,CAACZ,OAAO,EAAE;IACdH,MAAM,CAACkB,iBAAiB,CAACf,OAAO,CAAC,CAACc,IAAI,CAACR,UAAU,CAAC;EACpD,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,GAAG,mBAAiB,eAAArB,OAAA;QAAAqB,QAAA,EAAQjB;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChDzB,OAAA;MAAAqB,QAAA,GAAG,mBAAiB,eAAArB,OAAA;QAAAqB,QAAA,EAAQd,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEmB;MAAe;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACtB,EAAA,CAjCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}